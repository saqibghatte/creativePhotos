<?php require("config.php"); if ($logged_in_admin) { if (isset($_POST["modifyingYoutube_videos"])) {$id = secure($_POST["modifyingYoutube_videos"]); $page = getOnlyPageName($_SERVER["HTTP_REFERER"]);if (!empty($_POST["name"])) $name = secure($_POST["name"]);else {echo "Name is missing";exit();}if (!empty($_POST["link"])) $link = secure($_POST["link"]);else {echo "Link is missing";exit();}if (secure($_POST["modifyingYoutube_videos"]) > 0) {$sql = "UPDATE `youtube_videos` SET `name`='$name',`link`='$link' WHERE `id` = $id"; $result= runQuery($sql); $msg = "updated";} else { $sql = "INSERT INTO `youtube_videos` (`name`,`link`) VALUES ('$name','$link')";$result= runQuery($sql);$youtube_videos_id = $mysqli->insert_id; if ($page == "youtube_videos-view") $msg = $youtube_videos_id; else $msg = "created";} if ($result) {echo $msg;}else echo str_replace("for key", "column ", $mysqli->error);exit();} elseif (isset($_POST["detailsOf"]) && secure($_POST["detailsOf"]) == "youtube_videos") {$recycleBin = secure($_POST["recycleBin"]);$recycleBin = ($recycleBin == "true") ? 1 : 0;$searchThroughOut = secure($_POST["searchThroughOut"]);$searchName = secure($_POST['searchName']);$searchLink = secure($_POST['searchLink']);$searchCreatedOn = secure($_POST['searchCreatedOn']);$searchModifiedOn = secure($_POST['searchModifiedOn']);$searchName = !empty($searchName) ? "AND name LIKE '%$searchName%'" : '';$searchLink = !empty($searchLink) ? "AND link LIKE '%$searchLink%'" : '';if (!empty($searchCreatedOn)) {$searchCreatedOn = explode('to', $searchCreatedOn);$searchCreatedOnEnd = date('Y-m-d h:i:s a', strtotime($searchCreatedOn[1]));$searchCreatedOnStart = date('Y-m-d h:i:s a', strtotime($searchCreatedOn[0]));$searchCreatedOn = "AND createdOn BETWEEN '$searchCreatedOnStart' AND '$searchCreatedOnEnd'";} else $searchCreatedOnStart = '';if (!empty($searchModifiedOn)) {$searchModifiedOn = explode('to', $searchModifiedOn);$searchModifiedOnEnd = date('Y-m-d h:i:s a', strtotime($searchModifiedOn[1]));$searchModifiedOnStart = date('Y-m-d h:i:s a', strtotime($searchModifiedOn[0]));$searchModifiedOn = "AND modifiedOn BETWEEN '$searchModifiedOnStart' AND '$searchModifiedOnEnd'";} else $searchModifiedOnStart = ''; $searchThroughOut = !empty($searchThroughOut) ? "AND CONCAT_WS(' ',`name`,`link`) LIKE '%$searchThroughOut%'" : '';$search_params ="$searchName $searchLink $searchCreatedOn $searchModifiedOn $searchThroughOut";$fetchQuery = "SELECT `youtube_videos`.* FROM `youtube_videos` WHERE `youtube_videos`.`isDeleted` = $recycleBin $search_params";$data = array();$count = 0;$start = secure($_POST["start"]);$length = secure($_POST["length"]);$draw = secure($_POST["draw"]);$count_sql = "SELECT COUNT(`youtube_videos`.`id`) AS `total_count` FROM `youtube_videos` WHERE `youtube_videos`.`isDeleted` = $recycleBin $search_params";$totalCount = runQuery($count_sql)->fetch_assoc()["total_count"];$sql = "$fetchQuery ORDER BY `youtube_videos`.`id` LIMIT $start,$length";$result = runQuery($sql);while ($row = $result->fetch_object()) {$modifiers = "data-name='$row->name'data-link='$row->link' data-id='$row->id' ";$view='<a class="p-1 mx-1 text-success" href="youtube_videos-view?youtube_videos_id='.$row->id.'"><i class="far fa-file-alt"></i> View</a>';$edit='<a data-modaltitle="Edit" '.$modifiers.' class="p-1 mx-1 text-primary editYoutube_videos"><i class="fas fa-edit"></i> Edit</a>';$delete ='<a data-toggle="modal" data-target="#deleteYoutube_videos" data-id="'.$row->id.'" class="p-1 mx-1 text-danger deleteYoutube_videos"><i class="fas fa-trash-alt"></i> Delete </a>';$restore='<a data-toggle="modal" data-target="#restoreYoutube_videos" data-id="'.$row->id.'" class="p-1 mx-1 Youtube_videos"><i class="fas fa-trash-restore"></i> Restore </a>';if(!$recycleBin)$actions="$view$edit$delete";else $actions="$view$restore";array_push($data, array('Name' => $row->name,'Link' => $row->link,'Created On' => formatDateTime($row->createdOn),'Updated On' => formatDateTime($row->modifiedOn),"Sr #" => '<span class="btn-collection p-2 mt-n2">'.$actions.'</span>' . (++$count + $start),));} $results = array("draw" => $draw, "recordsTotal" => $totalCount, "recordsFiltered" => $totalCount, "aaData" => $data);echo json_encode($results);} elseif (isset($_POST["youtube_videos_id"])) {$data = array();$id = secure($_POST["youtube_videos_id"]);$youtube_videos = runQuery("SELECT `youtube_videos`.* FROM `youtube_videos` WHERE `youtube_videos`. `isDeleted` IN (0,1) AND `youtube_videos`.`id` = $id")->fetch_object();if (is_null($youtube_videos)) {echo "false";}else{$row=$youtube_videos;$modifiers = "data-name='$row->name'data-link='$row->link' data-id='$row->id'"; $edit="<a data-modaltitle='Edit' $modifiers class='btn btn-primary text-white editYoutube_videos'><i class='fas fa-edit'></i> Edit</a>";$delete="<a data-toggle='modal' data-target='#deleteYoutube_videos' data-id='$youtube_videos->id' class='btn btn-danger text-white deleteYoutube_videos'><i class='fas fa-trash-alt'></i> Delete </a>";$restore="<a data-toggle='modal' data-target='#restoreYoutube_videos' data-id='$youtube_videos->id' class='btn btn-success text-white restoreYoutube_videos'><i class='fas fa-trash-restore'></i> Restore </a>";if ($row->isDeleted == 0) $actions = "$edit$delete"; else $actions = "$restore"; $data = array('NAME' => $row->name,'LINK' => $row->link,'CREATED_ON' => formatDateTime($row->createdOn),'UPDATED_ON' => formatDateTime($row->modifiedOn), "Actions" => "$actions");echo json_encode($data);}} elseif (isset($_POST["deleteYoutube_videos"])) {$id = secure($_POST["youtube_videosDeleteId"]);if (is_numeric($id)) {$sql = "UPDATE `youtube_videos` SET `isDeleted` =1 WHERE `id`=$id AND `isDeleted` = 0";if (runQuery($sql)) echo "true";} else echo "false";exit();} elseif (isset($_POST["restoreYoutube_videos"])) {$id = secure($_POST["youtube_videosRestoreId"]);if (is_numeric($id)) {$sql = "UPDATE `youtube_videos` SET `isDeleted` =0 WHERE `id`=$id AND `isDeleted` = 1";if (runQuery($sql)) echo "true";} else echo "false";exit();} } else echo '403 Forbidden Access';